name: vllm-rbln / PR / Pytest

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "ref to checkout"
        required: false
        type: string
      pr_number:
        description: "PR number to run"
        required: false
        type: string
      rebel_compiler_version:
        description: "Version of rebel-compiler to use (optional)"
        required: false
        type: string
      optimum_rbln_version:
        description: "Version of optimum-rbln to use (optional)"
        required: false
        type: string
      fail_fast:
        description: "Whether to fail fast when one matrix job fails"
        required: false
        type: boolean
        default: true
  workflow_call:
    inputs:
      ref:
        description: "ref to checkout"
        required: false
        type: string
      fail_fast:
        description: "Whether to fail fast when one matrix job fails"
        required: false
        type: boolean
        default: true
      rebel_compiler_version:
        description: "Version of rebel-compiler to use (optional)"
        required: false
        type: string
      optimum_rbln_version:
        description: "Version of optimum-rbln to use (optional)"
        required: false
        type: string

env:
  REBEL_PYPI_ENDPOINT: ${{ vars.REBEL_PYPI_INTERNAL_ENDPOINT }}
  REBEL_PYPI_USERNAME: ${{ secrets.REBEL_PYPI_USERNAME }}
  REBEL_PYPI_PASSWORD: ${{ secrets.REBEL_PYPI_PASSWORD }}
  HF_USER_ID: ${{ secrets.HF_USER_ID }}
  HF_AUTH_TOKEN: ${{ secrets.HF_AUTH_TOKEN }}

jobs:
  build-vllm-rbln:
    name: Build vllm-rbln wheel
    runs-on: runner-vllm-ci
    outputs:
      wheel_filename: ${{ steps.get_wheel_filename.outputs.WHEEL_FILENAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.pr_number && format('refs/pull/{0}/merge', inputs.pr_number) || inputs.ref || github.sha }}
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install build dependencies and build vllm-rbln wheel
        run: |
          python -m pip install build setuptools_scm
          python -m build --wheel

      - name: Get wheel filename
        id: get_wheel_filename
        run: |
          WHEEL_FILENAME=$(ls dist/vllm_rbln-*.whl | xargs basename)
          echo "Found wheel file: ${WHEEL_FILENAME}"
          echo "WHEEL_FILENAME=${WHEEL_FILENAME}" >> $GITHUB_OUTPUT
      
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: vllm-wheel
          path: dist/
          retention-days: 7

  pytest:
    if: ${{ inputs.rebel_compiler_version && inputs.optimum_rbln_version }}
    name: Pytest (${{ matrix.test_type }})
    runs-on: runner-vllm-ci
    needs: [build-vllm-rbln]
    strategy:
      fail-fast: ${{ inputs.fail_fast }}
      matrix:
        test_type: [core, worker]
    steps:
      - name: Checkout the vllm-rbln repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.pr_number && format('refs/pull/{0}/merge', inputs.pr_number) || inputs.ref || github.sha }}
          submodules: recursive
          fetch-depth: 0

      - name: Get commit message if not provided
        id: get_commit_message
        if: ${{ inputs.commit_message == '' }}
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check if test should be skipped
        id: should_skip
        run: |
          COMMIT_MESSAGE="${{ steps.get_commit_message.outputs.message }}"
          SKIP=false
          
          case "${{ matrix.test_type }}" in
            "core")
              if [[ "$COMMIT_MESSAGE" == *"[skip-core]"* ]]; then
                SKIP=true
              fi
              ;;
            "worker")
              if [[ "$COMMIT_MESSAGE" == *"[skip-worker]"* ]]; then
                SKIP=true
              fi
              ;;
          esac
          
          echo "skip=$SKIP" >> $GITHUB_OUTPUT

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install rebel-compiler
        run: |
          python3 -m pip uninstall rebel-compiler -y
          PYPI_URL=$(echo ${{ env.REBEL_PYPI_ENDPOINT }} | sed "s/\/\//\0${{ env.REBEL_PYPI_USERNAME }}:${{ env.REBEL_PYPI_PASSWORD }}@/")
          VERSION=${{ inputs.rebel_compiler_version || needs.get-compiler-version.outputs.compiler_version }}
          python3 -m pip install --extra-index-url "$PYPI_URL" rebel-compiler=="${VERSION}"

      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: vllm-wheel

      - name: Install local vllm-rbln package and dependencies
        run: |
          pip install packaging setuptools wheel simphile pynvml huggingface_hub setuptools_scm fire pytest
          echo "whl file name is ${{ needs.build-vllm-rbln.outputs.wheel_filename }}"
          VERSION=${{ inputs.optimum_rbln_version }}
          pip install --force-reinstall --no-cache-dir ${{ needs.build-vllm-rbln.outputs.wheel_filename }} --constraint <(echo "optimum-rbln==$VERSION")
          echo "optimum-rbln $VERSION"

      - name: Run pytest
        if: steps.should_skip.outputs.skip != 'true'
        env:
          VLLM_RBLN_TEST_LEVEL: ${{ inputs.test_level }}
        run: |
          case "${{ matrix.test_type }}" in
            "core")
              pytest tests/v1/core -vv --durations 0
              ;;
            "worker")
              pytest tests/v1/worker -vv --durations 0
              ;;
            "prefix-caching")
              pytest tests/v1/prefix_caching -vv --durations 0
              ;;
          esac

      - name: Skip message
        if: steps.should_skip.outputs.skip == 'true'
        run: |
          echo "Found [skip-${{ matrix.test_type }}] in commit message, skipping CI"